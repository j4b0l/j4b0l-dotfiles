# A kubernetes context choice tool, if you have dialog installed, it will display available contexts, if not it will give you commands to execute
function kcontext() {
    USAGE="${FUNCNAME} \nrequires: kubectl\noptionally: dialog"
    KCTL=$(which kubectl 2>/dev/null)
    DIALOG=$(which dialog 2>/dev/null)
    if [ -z "${KCTL}" ]; then
        echo $USAGE
        return 1
    fi
    CURRENT_CONTEXT=$(${KCTL} config current-context)
    CONTEXTS=$(${KCTL} config get-contexts -o name)
    if [ -z "${DIALOG}" ]; then
        echo "Use one of following commands:"
        for ctx in $CONTEXTS; do
            echo "kubectl config use-context ${ctx}"
        done
    else
        OPTIONS=""
        for ctx in $CONTEXTS; do
            OPTIONS="$OPTIONS $ctx context"
        done
        CHOICE=$(${DIALOG} --clear --title "Pick a kubernetes context" --default-item ${CURRENT_CONTEXT} --menu "Available contexts:" 21 76 18 $OPTIONS 2>&1 >/dev/tty)
        clear
        if [ -n "$CHOICE" ]; then
            $KCTL config use-context $CHOICE
        else
            echo "Cancelled, current context: $CURRENT_CONTEXT"
        fi
    fi
}

function k-ns-grab-logs() {
    USAGE="${FUNCNAME} namespace"
    if [ -z "$1" ]; then
        echo $USAGE
        return 1
    fi
    NAMESPACE=$1
    kubectl get pod -n $NAMESPACE -o name|sed 's/pod\///g'|while read podname; do
        kubectl logs -n $NAMESPACE ${podname} >  ${podname}.log
    done
}
# vim: set filetype=sh:
